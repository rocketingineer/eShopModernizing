# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: windows-latest


steps:
- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: 'eShopModernizedMVCSolution\eShopModernizedMVC.sln'
    feedsToUse: 'select'
- task: VSBuild@1
  inputs:
          solution: 'eShopModernizedMVCSolution\eShopModernizedMVC.sln'
          vsVersion: '16.0'
          msbuildArgs: '/nologo /p:PublishProfile=FolderProfile.pubxml /p:DeployOnBuild=true /p:docker_publish_root=..\..\..\deploy\mvc\'
          maximumCpuCount: true
- task: CmdLine@2
  inputs:
          script: '@copy /Y eShopModernizedMVCSolution\src\eShopModernizedMVC\Dockerfile deploy\mvc'

- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Azure Container Registry'
    azureSubscription: 'azdevops-spn'
    azureContainerRegistry: '{"loginServer":"acreshop.azurecr.io", "id" : "/subscriptions/2f6a75ae-9e86-49d6-8782-56786af2bfe0/resourceGroups/rg-eshop-demo/providers/Microsoft.ContainerRegistry/registries/acreshop"}'
    
    dockerComposeFile: 'deploy/mvc/eShopModernizedMVCSolution/src/eShopModernizedMVC/docker-compose.yml'
    additionalDockerComposeFiles: 'docker-compose.override.yml'
    projectName: '$(Build.Name)'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: 'docker-compose build'
